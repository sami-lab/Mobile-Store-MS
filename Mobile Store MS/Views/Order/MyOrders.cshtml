@model IEnumerable<Mobile_Store_MS.ViewModel.Orders.OrderViewModel>

@using Mobile_Store_MS.ViewModel.OrdersViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationservice
@{
    ViewData["Title"] = "Index";
}

<section class="jumbotron text-center text-light" style="background-image:url('/Image/bg.jpg'); margin-left: calc(-50vw + 50% - 8px);  width:100vw;">
    <div>
        <h1 class="jumbotron-heading">MY ORDERS</h1>
    </div>
    <p>
        <a class="btn btn-primary mb-3" style="width:auto" asp-action="Create"
           asp-controller="Order">Create new order</a>
    </p>
</section>
<div class="container">
    @if (Model.Any())
    {
        <div class="row">
            <div class="panel panel-primary filterable">
                <div class="panel-heading rounded">
                    <h3 class="panel-title font-weight-bold">Orders</h3>
                    <div class="pull-right">
                        <button class="btn btn-default btn-xs btn-filter"><i class="fas fa-filter"></i> Filter</button>
                    </div>
                </div>
                <table class="table table-striped">
                    <thead>

                        <tr class="filters">
                            <th><input type="text" class="form-control" placeholder="#" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Ref No#" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Name" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Product" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Branch" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Date" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Amount" disabled></th>
                            <th><input type="text" class="form-control" placeholder="Status" disabled></th>
                            <th></th>
                        </tr>

                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.order_id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustRef)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.cus_name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.com_Name) @Html.DisplayFor(modelItem => item.model_name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StoreName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.orderStatus)
                                </td>


                                <td class="d-flex flex-row flex-nowrap justify-content-around">
                                    @if (User.IsInRole("Super Admin") || (await authorizationservice.AuthorizeAsync(User, "UpdatingStatus")).Succeeded)
                                    {
                                        @await Html.PartialAsync("~/Views/Order/OrderStatus.cshtml", new OrderStatus() { order_id = item.order_id, orderStatus = item.orderStatus })<span>|</span>
                                    }
                                    @if (item.orderStatus == Mobile_Store_MS.Data.Model.Order.Status.Completed)
                                    {
                                        <a asp-action="Invoice" asp-route-id="@item.order_id"><i class="fas fa-file-invoice" title="Invoice"></i></a><span>|</span>
                                    }
                                    @if(item.orderStatus == Mobile_Store_MS.Data.Model.Order.Status.Pending || User.IsInRole("Super Admin") || User.IsInRole("Admin"))
                                     {
                                             @await Html.PartialAsync("~/Views/Shared/Modal.cshtml", item.modelId)<span>|</span>
                                             <a asp-action="Edit" asp-route-id="@item.order_id"><i class="far fa-edit" title="Edit"></i></a><span>|</span>                              
                                     }

                                    <a asp-action="Details" asp-route-id="@item.order_id"><i class="fas fa-info-circle" title="Details"></i></a>


                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                No Orders Added yet
            </div>
            <div class="card-body">
                <h5 class="card-title">
                    Use the button below to Add new Order
                </h5>
                <a class="btn btn-primary mb-3" style="width:auto" asp-action="Create"
                   asp-controller="Order">Create new Order</a>
            </div>
        </div>
    }
</div>
@section Scripts{
    <link href="~/css/StyleSheet.css" rel="stylesheet" />
    <script src="~/js/Filter.js"></script>
}




