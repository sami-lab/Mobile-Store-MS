@model Mobile_Store_MS.ViewModel.PurchasingViewModel.EditPurchasingViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>EditPurchasingViewModel</h4>
<hr />
<div>
    
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="purchase_id" hidden />
            <div class="row d-flex justify-content-around">
                <div class="col-md-5 col-lg-5 border  col-sm-12">
                    <input asp-for="ExistingQuantity" hidden />
                    <input asp-for="purchase_id" hidden />
                    <input asp-for="Existing_store_id" hidden />

                    <div class="form-group row">
                        <label asp-for="store_id" class="control-label col-6"></label>
                        <div class="col-12">
                            <select asp-for="store_id" class="custom-select mr-sm-2"
                                    asp-items="@(new SelectList( @ViewBag.Stores,"store_id","StoreName"))">
                                <option value="">Please Select</option>
                            </select>
                        </div>
                        <span asp-validation-for="store_id" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <label asp-for="Com_name" class="control-label col-6"></label>
                        <div class="col-12">
                            <select id="CompanyId" asp-for="Phoneid" class="custom-select mr-sm-2"
                                    asp-items="@(new SelectList( @ViewBag.Companies,"Phoneid","Com_name"))">
                                <option value="">Please Select</option>
                            </select>
                        </div>
                        <span asp-validation-for="Phoneid" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <label asp-for="modelName" class="control-label col-6"></label>
                        <div class="col-12">
                            <select id="modelId" asp-for="modelId" class="custom-select mr-sm-2"
                                    asp-items="@(new SelectList(string.Empty,"modelId","model_name","--Select--"))">
                                <option value="">Please Select</option>
                            </select>
                        </div>
                        <span asp-validation-for="modelId" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <label asp-for="VendorName" class="control-label col-6"></label>
                        <div class="col-12">
                            <select id="VendorId" asp-for="vendor_id" class="custom-select mr-sm-2"
                                    asp-items="@(new SelectList(string.Empty,"vendor_id","VendorName","--Select--"))">
                                <option value="">Please Select</option>
                            </select>
                        </div>
                        <span asp-validation-for="vendor_id" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Date" class="control-label"></label>
                        <input asp-for="Date" readonly class="form-control" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label"></label>
                        <input asp-for="Quantity" class="form-control" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-5 col-lg-5 border  col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Sale Price of each Model</label>
                        <input id="eachPrice" readonly class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Sale Price</label>
                        <input id="price" readonly class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label"> Purchase Price of each Model</label>
                        <input id="Purchaseprice" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="Amount" class="control-label"></label>
                        <input asp-for="Amount" readonly class="form-control" />
                        <label id='profit' class="control-label">Profit: <span>0</span> </label>
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>
                    <div id="remaining" class="form-group d-none">
                        <label class="control-label"></label>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary btn-block" />
                        <a asp-action="Index" class="btn btn-primary btn-block">Cancel</a>
                    </div>
                </div>
            </div>
            
         </form>
    
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    const OrignalAmount = document.getElementById('Amount').value;
    $(document).ready(function () {
        //Company Change
        $("#CompanyId").change(async function () {
            $("#price").val(0);
            $('#eachPrice').val(0);
            $('#Purchaseprice').val(0); 
            $('#Amount').val(0);           
            $('#profit span').text(0);
            await data();
            await calculatePrice();           
           
        })
        //model Change
        $('#modelId').change(async function () {
            $("#price").val(0);
            $('#eachPrice').val(0);
            $('#Purchaseprice').val(0);
            $('#Amount').val(0);     
            $('#profit span').text(0);
            await calculatePrice();
        });
        //Quantity Change
       
        $('#Quantity').change(function () {
            calculatePrice();
            if ($('#Purchaseprice').val() != null) {
                const PurchaseAmount = $("#Quantity").val() * $('#Purchaseprice').val();               
                $('#Amount').val(PurchaseAmount);
                ShowRemaining();
            }
        });
        //Purchase Price Change
        $('#Purchaseprice').bind('input', function () {
            const PurchaseAmount = $("#Quantity").val() * $('#Purchaseprice').val();
            $('#Amount').val(PurchaseAmount);
            ShowRemaining();
            const Saleprice = $('#price').val();
            const PurchasePrice = $('#Amount').val();
            const profit = Saleprice - PurchasePrice;        
            $('#profit span').text(profit);
        })
        //Purchase Total amount Change   
        
    });
    window.onload= async function () {
        const PurchasePrice = $('#Amount').val();
        const Quantity = $("#Quantity").val();
        $('#Purchaseprice').val(PurchasePrice / Quantity);
        await data();
        await calculatePrice();
        $('#profit span').text($('#price').val() - $('#Amount').val());
    }

    async function data() {
       await  $.getJSON("/Order/GetAllModels", { PhoneId: $("#CompanyId").val() }, function (data) {
            $("#modelId").empty();
            $.each(data, function (index, row) {
                $("#modelId").append("<option value='" + row.modelId + "'>" + row.model_name + '</option>')
            });
        });
       await $.getJSON("/Purchasing/GetAllVendors", { PhoneId: $("#CompanyId").val() }, function (data) {
            $("#VendorId").empty();

            $.each(data, function (index, row) {

                $("#VendorId").append("<option value='" + row.vendorId + "'>" + row.vendor_name + '</option>')
            });
        });
    }
    async function calculatePrice() {
        const modelId = $('#modelId').val();
        if (modelId.toString() != null) {
           await $.getJSON("/Order/Price", { modelId: $("#modelId").val(), Quantity: $("#Quantity").val() }, function (data) {
               $("#price").val(data);
               $('#eachPrice').val(data / $('#Quantity').val())
            });
        }
    }
    function ShowRemaining() {
        const remaining = OrignalAmount - $('#Amount').val();
        if (remaining > 0) {
            $('#remaining').removeClass('d-none');
            $('#remaining label').html("<span class='text-danger'>Alert!</span> Remaining Amount " + remaining);
        }
        else if (remaining < 0) {
            $('#remaining').removeClass('d-none');
            $('#remaining label').html("<span class='text-danger'>Alert!</span> Pay More Amount =" + Math.abs(remaining));

        }
        else {
            $('#remaining').addClass('d-none');
        }
    }
</script>